// shadertype=glsl
#version 330 core

layout (location = 0) in vec3 in_Position;
layout (location = 1) in vec2 in_TexCoord;
layout (location = 2) in vec3 in_Normal;
layout (location = 3) in vec3 in_Tangent;
layout (location = 4) in vec3 in_Bitangent;  

uniform mat4 uni_p;
uniform mat4 uni_r;
uniform mat4 uni_t;
uniform mat4 uni_m;

out vec2 thefrag_TexCoord;
out vec3 thefrag_FragPos;
out mat3 TBN;

void main()
{ 
	vec3 T = normalize(vec3(uni_m * vec4(in_Tangent,   0.0)));
	vec3 B = normalize(vec3(uni_m * vec4(in_Bitangent, 0.0)));
	vec3 N = normalize(vec3(uni_m * vec4(in_Normal,    0.0)));
	if (dot(cross(N, T), B) < 0.0f)
	{
     T = T * -1.0f;
	 }
	TBN = mat3(T, B, N);  
	
	thefrag_TexCoord = in_TexCoord;	
	thefrag_FragPos = vec3(uni_m * vec4(in_Position, 1.0));

	gl_Position = uni_p * uni_r * uni_t * uni_m * vec4(in_Position, 1.0);
}