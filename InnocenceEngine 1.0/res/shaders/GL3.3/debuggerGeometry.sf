// shadertype=glsl
#version 330 core
layout (triangles) in;
layout (line_strip, max_vertices = 6) out;

in VS_OUT {
    vec3 normal;
	vec3 tangent;
	vec3 bitangent;
} gs_in[];
out vec3 finalColor;

const float MAGNITUDE = 0.04;

void GenerateLine(int index)
{
    gl_Position = gl_in[index].gl_Position;
	finalColor = vec3(1.0, 1.0, 1.0);
    EmitVertex();
	
    gl_Position = gl_in[index].gl_Position + vec4(gs_in[index].normal, 0.0) * MAGNITUDE;
	finalColor = vec3(0.0, 0.0, 1.0);
    EmitVertex();

	gl_Position = gl_in[index].gl_Position;
	finalColor = vec3(1.0, 1.0, 1.0);
    EmitVertex();

    gl_Position = gl_in[index].gl_Position + vec4(gs_in[index].tangent, 0.0) * MAGNITUDE;
	finalColor = vec3(1.0, 0.0, 0.0);
    EmitVertex();

	gl_Position = gl_in[index].gl_Position;
	finalColor = vec3(1.0, 1.0, 1.0);
    EmitVertex();

    gl_Position = gl_in[index].gl_Position + vec4(gs_in[index].bitangent, 0.0) * MAGNITUDE;
	finalColor = vec3(0.0, 1.0, 0.0);
	EmitVertex();

    EndPrimitive();
}

void main()
{
    GenerateLine(0); // first vertex
    GenerateLine(1); // second vertex
    GenerateLine(2); // third vertex
}