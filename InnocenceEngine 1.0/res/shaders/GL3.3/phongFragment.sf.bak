#version 330 core

in vec2 thefrag_TexCoord;
in vec3 thefrag_FragPos;
in vec3 thefrag_Normal;

uniform float uni_ambientIntensity;
uniform vec3 uni_ambientColor;

uniform vec3 uni_lightPos;
uniform sampler2D uni_texture;
uniform vec3 uni_diffuseColor;

out vec4 color;

void main()
{
	//ambient color
	vec3 ambient = uni_ambientIntensity * uni_ambientColor;

	//diffuse color
	vec3 normalizedNormal = normalize(thefrag_Normal);
	vec3 normalizedlightPos = normalize(uni_lightPos - thefrag_FragPos);
	vec3 diffuse = max(dot(normalizedNormal, normalizedlightPos), 0.0) * uni_lightColor;
	
	//final result
	color = texture(uni_texture, thefrag_TexCoord) * vec4(ambient + diffuse, 1.0);
}